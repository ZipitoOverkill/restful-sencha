/*
 * File: app/controller/Kernel.js
 *
 * This file was generated by Sencha Architect version 2.2.2.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.2.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('RestfulAdmin.controller.Kernel', {
    extend: 'Ext.app.Controller',

    config: {
        stores: [
            'Users'
        ],

        refs: {
            userForm: 'userform',
            mainView: 'mainview'
        },

        control: {
            "list#userList": {
                itemsingletap: 'onUserListItemSingletap'
            },
            "button#cancelButton": {
                tap: 'onCancelButtonTap'
            },
            "button#saveButton": {
                tap: 'onSaveButtonTap'
            },
            "button#newUserButton": {
                tap: 'onNewUserButtonTap'
            },
            "button#deleteUserButton": {
                tap: 'onDeleteUserButtonTap'
            }
        }
    },

    onUserListItemSingletap: function(dataview, index, target, record, e, eOpts) {
        this.getUserForm().setRecord(record);
        this.getUserForm().down('#deleteUserButton').show();
        this.getMainView().setActiveItem(1);
    },

    onCancelButtonTap: function(button, e, eOpts) {
        this.getMainView().setActiveItem(0);
    },

    onSaveButtonTap: function(button, e, eOpts) {
        var record = this.getUserForm().getRecord();

        if (Ext.isEmpty(record)) {
            Ext.getStore('Users').add(this.getUserForm().getValues());
        }
        else {
            this.getUserForm().updateRecord(record);
        }

        Ext.getStore('Users').sync();
        this.getMainView().setActiveItem(0);
    },

    onNewUserButtonTap: function(button, e, eOpts) {
        this.getUserForm().reset();
        this.getUserForm().down('#deleteUserButton').hide();
        this.getMainView().setActiveItem(1);
    },

    onDeleteUserButtonTap: function(button, e, eOpts) {
        var record = this.getUserForm().getRecord();

        Ext.Msg.confirm('User Delete', 
        'Are you sure you want to delete ' + record.get('firstName') + ' ' + record.get('lastName'),
        function(buttonId) {
            if (buttonId == 'yes') {
                var store = Ext.getStore('Users');
                store.remove(record);
                store.sync();

                this.getMainView().setActiveItem(0);
            }
        }, this);
    }

});